{"version":3,"sources":["components/Pokemon.js","graphql/get-pokemons.js","containers/PokemonsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","pokemon","className","name","maxHP","maxCP","src","image","alt","attacks","special","slice","map","attack","damage","GET_POKEMONS","gql","PokemonsContainer","useQuery","variables","first","data","pokemons","id","App","client","ApolloClient","uri","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAEO,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QACtB,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,4BAAID,EAAQE,SAEhB,sBAAKD,UAAU,gBAAf,UACI,+BAAOD,EAAQG,QACf,+BAAOH,EAAQI,WAEnB,qBAAKH,UAAU,iBAAf,SACI,qBAAKI,IAAKL,EAAQM,MAAOC,IAAKP,EAAQE,SAE1C,qBAAKD,UAAU,mBAAf,SACKD,EAAQQ,QAAQC,QAAQC,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAAM,OAC3C,+BAA+CA,EAAOV,MAAtD,UAAcU,EAAOV,KAArB,YAA6BU,EAAOC,iB,sBCf3CC,E,MAAeC,GAAH,6VCGlB,SAASC,IAAqB,IAAD,EACMC,mBAASH,EAAc,CACzDI,UAAW,CAAEC,MAAO,MADjBC,KADyB,gBACA,GADA,GACjBC,gBADiB,MACP,GADO,EAIhC,OACI,qBAAKpB,UAAU,YAAf,SACKoB,GAAYA,EAASV,KAAI,SAAAX,GAAO,OAAI,cAACD,EAAD,CAA0BC,QAASA,GAArBA,EAAQsB,S,MCLxD,SAASC,IAEtB,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAI,yCAGN,OACE,cAAC,iBAAD,CAAgBF,OAAQA,EAAxB,SAEE,+BACE,cAACR,EAAD,QChBR,IAYeW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.22ce1abe.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Pokemon({ pokemon }) {\n    return (\n        <div className=\"pokemon\">\n            <div className=\"pokemon__name\">\n                <p>{pokemon.name}</p>\n            </div>\n            <div className=\"pokemon__meta\">\n                <span>{pokemon.maxHP}</span>\n                <span>{pokemon.maxCP}</span>\n            </div>\n            <div className=\"pokemon__image\">\n                <img src={pokemon.image} alt={pokemon.name} />\n            </div>\n            <div className=\"pokemon__attacks\">\n                {pokemon.attacks.special.slice(0, 3).map(attack => (\n                    <span key={`${attack.name}-${attack.damage}`}>{attack.name}</span>\n                ))}\n            </div>\n        </div>\n    );\n}\n","import gql from 'graphql-tag'\n\nexport const GET_POKEMONS = gql`\n    query pokemons($first: Int!) {\n        pokemons(first: $first) {\n            id\n            name\n            image\n            maxHP\n            maxCP\n            attacks {\n                special {\n                    name\n                    damage\n                }\n            }\n        }   \n    }\n`;","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Pokemon } from '../components/Pokemon';\nimport { GET_POKEMONS } from '../graphql/get-pokemons';\n\nexport function PokemonsContainer() {\n    const {data: { pokemons= [] } = {}} = useQuery(GET_POKEMONS, {\n        variables: { first: 12 },\n    })\n    return (\n        <div className=\"container\">\n            {pokemons && pokemons.map(pokemon => <Pokemon key={pokemon.id} pokemon={pokemon}/>)}\n        </div>\n    );\n}","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { PokemonsContainer } from './containers/PokemonsContainer.js'\nimport './css/style.css'\n\nexport default function App() {\n\n  const client = new ApolloClient({\n    uri:'https://graphql-pokemon2.vercel.app/'\n  });\n  \n  return (\n    <ApolloProvider client={client}> \n      {/* client to provider component to the graphql server */}\n      <main>\n        <PokemonsContainer />\n      </main>\n    </ApolloProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}